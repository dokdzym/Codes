class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {//完全背包求方案数
        vector<unsigned long long> dp(target + 1, 0);
        dp[0] = 1;
        size_t len = nums.size();
        for(int j = 1; j <= target; ++ j)
            for(int i = 0 ; i < len; ++ i)
			    if(j >= nums[i])
                    dp[j] += dp[j - nums[i]];
        return dp[target];
    }
};

这不是背包，背包不在乎顺序，在背包中先取背包1再取背包2，或者先取背包2再取背包1是同一种情况。这题中是两种情况

