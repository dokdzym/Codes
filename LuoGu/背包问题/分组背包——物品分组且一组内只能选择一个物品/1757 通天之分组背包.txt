#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
#include<string>
#include<unordered_map>
using namespace std;

int main()
{
	unordered_map <int, vector<int>> hash;//hash[组号]是存放着该组所有物品id的vector
	int m, n;
	cin >> m >> n;
	vector<int> dp(m + 1, 0);
	vector<int> w(n + 1, 0);//重量
	vector<int> v(n + 1, 0);//价值
	vector<int> g(n + 1, 0);//g[i]是组号
	for (int i = 1; i <= n; ++i)
	{
		cin >> w[i] >> v[i] >> g[i];
		hash[g[i]].emplace_back(i);
	}
	sort(g.begin(), g.end());
	g.erase(unique(g.begin(), g.end()), g.end());
	//以上去除g的重复

	for (int i = 0; i < g.size(); ++i)//遍历第i个组
		for (int j = m; j >= 0; --j)
			for (int k = 0; k < hash[g[i]].size(); ++k)//遍历第i个组里的第k个物品
				if(j >= w[hash[g[i]][k]])
					dp[j] = max(dp[j], dp[j - w[hash[g[i]][k]]] + v[hash[g[i]][k]]);
	cout << dp[m];
}